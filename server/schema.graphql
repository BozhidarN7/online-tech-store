type Query {
    info: String!
    products(limit: Int): [Product]
    product(id: ID!): Product
    user(id: ID): User
}

type Mutation {
    signUp(firstName: String!, lastName: String!, email: String!): User!

    signIn(email: String!): User!

    addRemoveToFavorites(
        userId: ID!
        productId: ID!
    ): AddToFavoritesOrCartMutationResponse!

    addRemoveToCart(
        userId: ID!
        productId: ID!
    ): AddToFavoritesOrCartMutationResponse!

    rate(userId: ID!, productId: ID!, rating: Int!): RateMutationResponse!

    buyProducts(products: [OrderContent!], userId: ID): PaymentResponse!

    reduceQuantities(
        productsIds: [String!]
        quantities: [Int!]
    ): ProductsUpdateMutationResponse!

    addOpinion(
        userId: ID!
        productId: ID!
        opinion: String!
    ): addOpinionResponse
}

input OrderContent {
    _id: ID
    price: Float
}

type Product {
    _id: ID
    brand: String
    model: String
    category: String
    description: String
    specification: [[String]]
    price: Float
    rating: Int
    votes: Int
    ratingScore: [RatingScore]
    quantity: Int
    image: String
    favoriteTo: [User!]
    inCartTo: [User!]
    createdAt: String
    opinions: [Opinion]
}

type User {
    _id: ID
    firstName: String!
    lastName: String!
    email: String!
    createdAt: String!
    favorites: [Product!]
    ratings: [Rating]
    cart: [Product!]
}

type RatingScore {
    user: ID
    rating: Int
    _id: ID
}

type Rating {
    product: ID
    rating: Int
    _id: ID
}

type Opinion {
    user: ID
    userInfo: User
    opinion: String
    _id: ID
}

interface MutationResponse {
    code: String!
    success: Boolean!
    message: String!
}

type AddToFavoritesOrCartMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    user: User
    product: Product
}

type RateMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    user: User
    product: Product
}

type PaymentResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    clientSecret: String!
}

type addOpinionResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    product: Product
}

type ProductsUpdateMutationResponse {
    code: String!
    success: Boolean!
    message: String!
    products: [Product]
}
